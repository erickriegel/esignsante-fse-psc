<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>fr.ans.sign</groupId>
	<artifactId>esignsante-psc</artifactId>
	<version>0.0.22-SNAPSHOT</version>
	<!-- <version>${project-version}</version> -->
	<name>esignsante-psc</name>

	<packaging>jar</packaging>

	<scm>
		<!-- <developerConnection>scm:svn:http://scm-forge.asipsante.fr:18080/svn/esignsante/esignsante-ws/applicatif/tags/esignsante-webservices-2.4.1.99</developerConnection> -->
		<developerConnection>scm:svn:http://scm-forge.asipsante.fr:18080/svn/esignsante/esignsante-psc/trunk</developerConnection>
	</scm>

	<description>webservice REST de signature à partir d'un jeton prosante connect</description>
	<properties>
		<!-- <project-version>0.0.1-SNAPSHOT</project-version> -->
		<springfox-version>3.0.0</springfox-version>
		<jackson-version>2.12.3</jackson-version>
		<start-class>fr.ans.sign.esignsantepsc.EsignsantePscApplication</start-class>
		<dist>docker</dist>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<embededMongoDownloadUrl>http://fastdl.mongodb.org/</embededMongoDownloadUrl>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

<!--  forcer upgrade pour BsonUTils => asBson -->
<!-- <dependency>
    <groupId>org.springframework.data</groupId>
    <artifactId>spring-data-mongodb</artifactId>
    <version>3.2.4</version>
</dependency> -->  

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- CJU -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<!-- <version>5.3.8</version> -->
			<scope>test</scope>
		</dependency>

		<!-- <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> 
			<scope>test</scope> </dependency> <dependency> <groupId>org.junit.jupiter</groupId> 
			<artifactId>junit-jupiter-engine</artifactId> <scope>test</scope> </dependency> -->

		<!-- FIN CJU -->


		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<!-- <scope>test</scope> -->
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- OPENAPI et ses dependences -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-core</artifactId>
			<version>${springfox-version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>27.0.1-jre</version>
		</dependency>

		<!-- XML processing: Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.joschi.jackson</groupId>
			<artifactId>jackson-datatype-threetenbp</artifactId>
			<!-- version 2.12.2 KO -->
			<version>2.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<!-- <version>0.2.0</version> -->
			<version>0.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.threeten</groupId>
			<artifactId>threetenbp</artifactId>
			<!-- <version>1.3.1</version> -->
			<version>1.5.1</version>
		</dependency>

		<!-- Bean Validation API support -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<!-- FIN OPENAPI et ces dependences -->

		<!-- client esignsante -->
		<dependency>
			<groupId>fr.ans.esignsante</groupId>
			<artifactId>esignsante-java-client</artifactId>
			<version>2.5.0</version>
		</dependency>
	<!-- FIN client esignsante -->
			
			<!--  parser un json JSONObject-->
<!-- 			<dependency>
    <groupId>com.googlecode.json-simple</groupId>
    <artifactId>json-simple</artifactId>
    <version>1.1</version>
</dependency> -->
			
			<!--  validation avant sauvegarde MongoDB -->
<!-- 		<dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-validator</artifactId>
    <version>7.0.1.Final</version>
</dependency> --> 
<!--  	<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency> -->	
	</dependencies>




	<build>
		<resources>
			<resource>
				<directory>src/main/resources/</directory>
				<excludes>
					<exclude>esignsante-psc.yaml</exclude>
				</excludes>

			</resource>
			<!-- <resource> -->
			<!-- <directory>src/main/resources/${dist}</directory> -->
			<!-- </resource> -->
		</resources>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testResources>
			<testResource>
				<directory>src/test/resources/*</directory>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>*.properties</include>
					<include>*.sh</include>
					<include>*.json</include>
				</includes>
			</testResource>
		</testResources>

		<plugins>
			<!-- Generation doc par Spring restdocs -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<!-- <version>1.5.8</version> -->
				<version>2.1.0</version>

				<executions>
					<execution>
						<id>generated-output-html</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>

						<configuration>

							<sourceDocumentName>esignsante-psc-api.adoc</sourceDocumentName> <!-- CJU doit être dans src/main/asciidoc et contenir les snippets à intégrer -->

							<backend>html</backend>
							<doctype>book</doctype>
							<!-- <sourceHighlighter>prettify</sourceHighlighter> -->
							<!-- <sourceHighlighter>coderay</sourceHighlighter> -->
							<attributes>
								<toc>left</toc>
								<icons>font</icons>
								<sectanchors>true</sectanchors>
								<!-- set the idprefix to blank -->
								<idprefix />


								<snippets>${project.build.directory}/generated-snippets</snippets> <!-- CJU -->
							</attributes>

							<!-- CJU TODO ASCIIDOC -->
							<!-- <project> -->
							<!-- <name> TODO POM.xml: NOM du PROJET</name> <artifactId>@{project.artifactId}</artifactId> 
								<description>TODO POM.xml: description</description> <version>@{project.version}</version> -->
							<!-- </project> -->
							<!-- FIN CJU TODO ASCIIDOC -->

						</configuration>

					</execution>


					<!-- <execution> <id>generated-output-pdf</id> <phase>generate-resources</phase> 
						<goals> <goal>process-asciidoc</goal> </goals> <configuration> <backend>pdf</backend> 
						<sourceHighlighter>coderay</sourceHighlighter> <doctype>book</doctype> <attributes> 
						<icons>font</icons> <pagenums/> <toc/> <idprefix/> <idseparator>-</idseparator> 
						<pdf-fontsdir>data/fonts</pdf-fontsdir> <pdf-stylesdir>data/themes</pdf-stylesdir> 
						<pdf-style>cn</pdf-style> </attributes> </configuration> </execution> -->

				</executions>

				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
						<version>${spring-restdocs.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- FIN Generation doc par Spring restdocs -->



			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>

                      <!--  <jvmArguments>-Dfile.encoding=UTF8</jvmArguments> -->
          
						<!-- -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -->
						<!-- -add-opens java.base/java.lang=ALL-UNNAMED -illegal-access=permit -->
					</jvmArguments>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>5.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>

						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/esignsante-psc.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<!-- <language>spring</language> -->
							<library>spring-boot</library>
							<ignoreFileOverride>${project.basedir}/.openapi-generator-ignore</ignoreFileOverride>
							<!-- <generateModels>true</generateModels> -->

							<additionalProperties>
								<additionalProperty />
							</additionalProperties>
							<configOptions>
								<basePackage>fr.ans.api.sign.esignsante.psc</basePackage>
								<configPackage>fr.ans.api.sign.esignsante.psc.config</configPackage>
								<modelPackage>fr.ans.api.sign.esignsante.psc.model</modelPackage>
								<apiPackage>fr.ans.api.sign.esignsante.psc.api</apiPackage>
								<sourceFolder>src/main/java</sourceFolder>
								<dateLibrary>threetenbp</dateLibrary>
								<delegatePattern>true</delegatePattern>
								<useBeanValidation>true</useBeanValidation>
								<skipOverwrite>true</skipOverwrite>
								<disableHtmlEscaping>true</disableHtmlEscaping>
								<!-- param with no effect! <skipFormModel>false</skipFormModel> -->

							</configOptions>
							<withXml>true</withXml>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- compilation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- <version>3.8.0</version> -->
				<configuration>
					<source>11</source>
					<target>11</target>
					<compilerArgs>
						<!-- <arg>-Xlint:deprecation</arg> -->
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- FIN compilation -->
			<!-- copie des restdocs dans le folder static -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.outputDirectory}/static/docs
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										${project.build.directory}/generated-docs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- FIN copie des restdocs dans le folder static -->


			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.1.0</version>
				<configuration>

					<from>
						<image>${docker.registry}/openjdk:16-slim-buster</image>
					</from>
					<to>
						<image>${image.registry}/cybersante/esignsante-psc</image>
						<tags>
							<tag>latest</tag>
							<tag>${project.version}</tag>
						</tags>
						<auth>
							<username>jenkins</username>
							<password>${jenkins.password}</password>
						</auth>
						<!-- <jib.to.auth.username>${artificatory.username}</jib.to.auth.username> 
							<jib.to.auth.password>${artificatory.password}</jib.to.auth.password> -->
					</to>
					<container>
						<user>daemon:daemon</user>
						<mainClass>fr.ans.sign.esignsantepsc.EsignsantePscApplication</mainClass>
						<args>
							<arg>--server.servlet.context-path=/esignsante-psc/v1</arg>
						</args>
						<ports>
							<port>8080</port>
						</ports>
						<format>Docker</format>
						<!--this sacrifices reproducibility since the timestamp will change 
							with every build -->
						<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
						<!--<creationTime>2020-09-01T10:15:30+09:00</creationTime> -->
					</container>
					<allowInsecureRegistries>true</allowInsecureRegistries>
				</configuration>
			</plugin>

			<!-- assembly -->
			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> 
				<descriptors> <descriptor>src/main/assembly/install.xml</descriptor> <descriptor>src/main/assembly/directories.xml</descriptor> 
				</descriptors> </configuration> </plugin> -->
			<!-- FIN assembly -->

			<!-- license pour Hook SVN -->
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>3.0</version>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<header>licence-header.txt</header>
					<includes>
						<include>**/*.java</include>
						<include>**/*.properties</include>
					</includes>
					<strictCheck>true</strictCheck>
				</configuration>
			</plugin>
			<!-- FIN license pour Hook SVN -->

			<!-- pour executer les tests dans la phase d'intégration et non la phase 
				de test (plugin de démarrage de Embeded MongoDB) -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- <version>2.22.0</version> -->
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
				<executions>
					<execution>

						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skipTests>false</skipTests>
							<includes>
								<include>**/*Test.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>>maven-failsafe-plugin</artifactId> 
				<configuration> <includes> <include>**/*Test.java</include> </includes> </configuration> 
				<executions> <execution> <goals> <goal>integration-test</goal> <goal>verify</goal> 
				</goals> </execution> </executions> </plugin> -->

			<!-- FIN pour executer les tests dans la phase d'intégration et non la 
				phase de test (plugin de démarrage de Embeded MongoDB) -->

			<!-- demarrage- arret EmbeddedMongoDB pour les tests -->
			<!-- exemple de conf ICI: https://github.com/joelittlejohn/embedmongo-maven-plugin -->
 			<plugin>
				<groupId>com.github.joelittlejohn.embedmongo</groupId>
				<artifactId>embedmongo-maven-plugin</artifactId>
				<version>0.4.2</version>
				<executions>
					<execution>
						<id>start</id>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<port>27017</port>
							<version>3.4.24</version>
							<logging>console</logging>
							<downloadPath>${embededMongoDownloadUrl}</downloadPath>
						</configuration>
					</execution>
					<execution>
						<id>stop</id>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- FIN demarrage- arret EmbeddedMongoDB pour les tests -->

		</plugins>
	</build>

	<!-- ************************* profils *********************************** -->
	<profiles>
		<profile>
			<id>swagger</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>swagger</spring.profiles.active>
			</properties>
		</profile>

		<profile>
			<activation>
				<os>
					<family>Linux</family>
				</os>
			</activation>
			<id>jenkins</id>
			<properties>
				<artifactory.username>jenkins</artifactory.username>
				<artifactory.password>password</artifactory.password>
				<artifactory.hostname>http://st-forge.asipsante.fr:8081</artifactory.hostname>
				<ldap.server.url>ldap://annuaire-igc.esante.gouv.fr:389</ldap.server.url>
				<docker.registry>registry.repo.docker.proxy-prod-forge.asip.hst.fluxus.net</docker.registry>
				<!--<image.registry>esignsante-registry.repo.artifactory-interne.henix.asipsante.fr</image.registry> -->
				<image.registry>registry.repo.docker.proxy-prod-forge.asip.hst.fluxus.net</image.registry>
				<embededMongoDownloadUrl>http://st-forge.asipsante.fr:8081/artifactory/fastdl.mongodb.org/</embededMongoDownloadUrl>
			</properties>
			<distributionManagement>
				<!-- <repository> <id>artifactory</id> <url>${distributionRepositoryJenkinsfile}</url> 
					</repository> -->
				<repository>
					<id>artifactory</id>
					<url>${artifactory.hostname}/artifactory/asip-releases</url>
				</repository>
				<snapshotRepository>
					<id>artifactory</id>
					<url>${artifactory.hostname}/artifactory/asip-snapshots</url>
				</snapshotRepository>
			</distributionManagement>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>parse-version</id>
								<goals>
									<goal>parse-version</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<version>3.0.0-M1</version>
						<configuration>
							<username>${svn.username}</username>
							<password>${svn.password}</password>
							<checkModificationExcludes>
								<checkModificationExclude>pom.xml</checkModificationExclude>
								<checkModificationExclude>pom.xml.versionsBackup</checkModificationExclude>
							</checkModificationExcludes>
							<tagBase>http://scm-forge.asipsante.fr:18080/svn/esignsante/esignsante-psc/tags</tagBase>
							<tagNameFormat>@{project.artifactId}-@{project.version}</tagNameFormat>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
